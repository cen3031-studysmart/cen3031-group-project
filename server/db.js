import db from 'oracledb';
import sql from 'sql-template-tag';
import dotenv from 'dotenv';
dotenv.config({path: ".env"});

/**
 * @type {string}
 */
const user = process.env.DB_USER;

/**
 * @type {string}
 */
const password = process.env.DB_PASSWORD;

/**
 * @type {string}
 */
const connectString = 'oracle.cise.ufl.edu:1521/orcl';

/**
 * Creates and returns a database connection instance
 * @returns{db.Connection} - Oracle instance
 */
async function createConnection() {
    try {
        const connection = await db.getConnection({ user, password, connectString });
        return connection;
    } catch (e) {
        console.error(e);
    }

    return null;
}

/**
 * Creates a user in the database
 * @param {string} userId - The user's ID generated by Clerk. It must be
 * between 1 and 100 characters.
 */
export async function createUser(userId) {
    if (typeof userId != 'string' && !(userId instanceof String)) {
        throw new Error('The argument userId must be a string.');
    }

    if (userId.length < 1 || userId.length > 100) {
        throw new Error('The argument userId must be between 1 and 100 characters.');
    }

    try {
        const connection = await createConnection();

        await connection.execute(sql`INSERT INTO "EMMANUELNIFAKOS".studysmart_user VALUES (${userId}, CURRENT_DATE)`);
        await connection.commit();
        await connection.close();

    } catch (e) {
        console.error(e);
    }
}

        connection.close();

    } catch (e) {
        console.error(e);
        console.error(`User id ${userId} could not be created`);
    }
}

